#!/bin/bash -x

SECRET='<%= scope.lookupvar('mysql::server::repl_xinetd_svr_secret') %>' 
MASTER_HOST='<%= mysql_replication['master'] %>'
MASTER_USER='<%= scope.lookupvar('mysql::server::repl_user') %>'
MASTER_PASSWORD='<%= scope.lookupvar('mysql::server::repl_password') %>'
EXTRABACKUP=
PORT=18145
HOME=/root

usage () {
	echo ""
	echo "USAGE: "
	echo "  $0 -x <xtrabackup binary> [-s -l <login> -p <password> ] [-h] [-m] [-f]"
	echo "    -x  specify which xtrabackup binary to use (can be one of xtrabackup_51, xtrabackup, xtrabackup_55)"
	echo "        see: http://www.percona.com/doc/percona-xtrabackup/xtrabackup_bin/choosing_binary.html"
	echo "    -s  use SSH instead of netcat"
	echo "    -l  SSH user login"
	echo "    -p  SSH user account"
        echo "    -m  master-master, do the needed stuff to the remote server in order to sync circular replication"

STATUS=
if [ "$USE_SSH" = "yes" ] ; then
	TMPFILE=$(mktemp)
	trap "rm -f $TMPFILE; exit" INT TERM EXIT
	echo "Importing mysql data from master..."
	SSHPASS="$SSH_PASSWD" sshpass -e ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 $SSH_LOGIN@$MASTER_HOST 'innobackupex --slave-info --stream=tar ./' 2>$TMPFILE |tar xfi -
	if grep 'completed OK!' $TMPFILE >/dev/null ; then
		STATUS=OK
	fi
else
	if [ "$MASTER_MASTER" = "yes" ] ; then
		NOW=$(date +%s)
		KEY=$(echo "${NOW}${SECRET}" |sha1sum |cut -d' ' -f1)
		echo "Stopping slave at remote server..."
		echo "$NOW $KEY STOP_SLAVE" |nc $MASTER_HOST $PORT |grep OK
		[ "$?" = "0" ] || exit 1
		sleep 2
	fi
	NOW=$(date +%s)
	KEY=$(echo "${NOW}${SECRET}" |sha1sum |cut -d' ' -f1)
	echo "Importing mysql data from master..."
	echo "$NOW $KEY BACKUP" |nc $MASTER_HOST $PORT |tar xfi -
	if [ "$?" = "0" ] ; then
		STATUS=OK
	fi
fi

if [ "$STATUS" = "OK" ] ; then
	echo "Backup imported, now applying transaction logs..."
	innobackupex --apply-log --ibbackup=$EXTRABACKUP ./ 2>/dev/null
	chown -R mysql:mysql /var/lib/mysql
	set $(cat /var/lib/mysql/xtrabackup_binlog_info)
	LOG_FILE=$1
	LOG_POS=$2
	if [ "$LOG_FILE" != "" ] && [ "$LOG_POS" != "" ] ; then
		echo "Applying master binlog info..."
		(su mysql -s /bin/sh -c '/usr/sbin/mysqld --skip-slave-start 2>/dev/null' &)
		sleep 10	# Starting mysql could be a bit long
		mysql -e "CHANGE MASTER TO MASTER_HOST='$MASTER_HOST', MASTER_USER='$MASTER_USER', MASTER_PASSWORD='$MASTER_PASSWORD', MASTER_LOG_FILE='$LOG_FILE', MASTER_LOG_POS=$LOG_POS;"
		pkill -KILL mysqld 1>/dev/null 2>&1
		sleep 5
		rm -f /var/lib/mysql/xtrabackup_*
		/etc/init.d/mysql start 
		mysql -e 'START SLAVE;'
	else
		echo "No Master binlog info: skipping setting up replication."
		/etc/init.d/mysql start
	fi
	if [ "$USE_SSH" != "yes" ] && [ "$MASTER_MASTER" = "yes" ] ; then
		sleep 30	# Wait a bit in order to have a coherent Master Status
		set $(echo 'show master status' |mysql -N)
		NOW=$(date +%s)
		KEY=$(echo "${NOW}${SECRET}" |sha1sum |cut -d' ' -f1)
		if [ "$#" = "2" ] ; then
			echo "Setting up circular replication at remote server..."
			echo "$NOW $KEY START_SLAVE $1 $2" |nc $MASTER_HOST $PORT |grep OK
			[ "$?" = "0" ] || exit 1
		fi
	fi
	echo "Import completed OK."
else
	echo "Error during backup import. Exiting."
	cd /
	/etc/init.d/mysql start
fi

